* What is FUSTA?
FUSTA is a FUSE-based virtual filesystem mirroring a (multi)FASTA file as a hierarchy of individual virtual files, simplifying efficient data extraction and bulk/automated processing of FASTA files.

[[file:fusta.png]]

** Licensing
FUSTA is distributed under the CeCILL-C (LGPLv3 compatible) license. Please see the LICENSE file for details.
* Getting Started
** Installation
*** FUSE
FUSE (Filesystem in USErspace) is a software interface bridging userspace code and kernel routines allowing the use of file-based interfaces without inclusion in the kernel or administrator rights.
**** GNU/Linux
On most GNU/Linux distributions,  FUSE is installed by default. Otherwise, you should install it from your package manager – note that a reboot might be necessary for the kernel module to be loaded.
**** macOS
You should download and install [[https://osxfuse.github.io/][FUSE for macOS]] in order to be able to use FUSTA.
**** FreeBSD
First, some dependencies should be installed:
#+begin_src
pkg add pkgconf fusefs-libs
#+end_src
The FUSE kernel module has then to be loaded:
#+begin_src
sudo kldload fuse
#+end_src
Finally, you may wish to enable FUSE mounting without requiring administrator permissions:
#+begin_src
sudo sysctl vfs.usermount=1
#+end_src
*** From Source
**** Prerequisites
To build FUSTA from sources, you need to install the [[https://www.rust-lang.org/en-US/install.html][Rust compiler]]. Once it has been installed, clone the repository:
#+begin_src
git clone https://github.com/delehef/asgart.git
#+end_src
**** Installation
You can then build FUSTA by running =cargo=, the Rust build tool:
#+begin_src
cd fusta
cargo build --release
#+end_src
Once the build has concluded, you will find the binary in =target/release/fusta=. It can be run from there or may be moved to a more standard location.

* Usage
** Quick Start
These commands run =fusta= in the background. It will mount the FASTA file =file.fa= in an automatically created =fusta= folder, exposing all the sequences contained in =file.fa= there. The call to =tree= will display the virtual hierarchy, then =fusermount= is called to cleanly unmount the file.

#+begin_src
fusta file.fa -D
tree -h fusta/
fusermount -u fusta
#+end_src
** Description
Once started, =fusta= will expose the content of a FASTA file in a way that makes it usable by any piece of software using as if it were a set of independent files, detailed as follow.
*** =infos.csv=
This read-only CSV file contains a list of all the fragments present in the mounted FASTA file, with, for each of them, the standard =id= and =additional informations= field, plus a third one for the length of the sequence.
*** =infos.txt=
This read-only text file provides the same informations, but in a more human-readable format.
*** =labels.txt=
This read-only file contains a list of all the sequence IDs present in the mounted FASTA file.
*** =fasta=
This folder contains all the individual sequences present in the original FASTA file, exposed as virtually independent read/write FASTA files. Thus, the file can be read, copied, removed, edited, etc. as normal files, and any alteration will be reflected on the mounted FASTA file when fusta is closed.
*** =seqs=
This folder contains all the individual sequences present in the original FASTA file, exposed as virtually independent read/write files containing only the sequences - without the FASTA headers, but with any newline preserved. These files can be read, copied, removed, edited, etc. as normal files, and any alteration will be reflected on the mounted FASTA file when fusta is closed.
*** =append=
This folder should be used to add new sequences to the mounted FASTA file. Any valid fasta file copied or moved to this directory will see its sequences appended to the mounted FASTA files. It should be noted that the process is completely transparent and the the folder will remain empty, even though the operation is successful.
*** =get=
This folder is used for range access to the sequences in the mounted FASTA file. Although it is empty, any read access to a (non-existing) file following the pattern =get/SEQID:START-END= will return the corresponding range (0-indexed) in the specified sequence. It should be noted that the access skip headers and newlines, so that the =START-END= coordinates map to actual loci in the corresponding sequence and not to bytes in the mounted FASTA file.
** Examples
All the following examples assume that a FASTA file has been mounted (/e.g./ =fusta -D genome.fa=), and is unmounted after manipulation (/e.g./ =fusermount -u fusta=).
*** Get an overview of the file content
 #+begin_src shell
 cat fusta/infos.txt
 #+end_src
*** Extract individual sequences as FASTA files
 #+begin_src shell
 cat fusta/fasta/chr{X,Y}.fa > ~/sex_chrs.fa
 #+end_src
*** Extract a range of a sequence
 #+begin_src shell
 cat fusta/get/chr12:12000000-12002000
 #+end_src
*** Remove sequences from the original file
 #+begin_src shell
 rm fusta/seq/chr{3,5}.seq
 #+end_src
*** Add a new sequence
 #+begin_src shell
 cp more_sequences.fa fusta/append
 #+end_src
*** Edit a sequence
 #+begin_src shell
 nano fusta/seq/chrMT.seq
 #+end_src
*** Rename sequences
 #+begin_src shell
 cd fusta/seq; for i in *; do mv ${i} chr${i}; done
 #+end_src
*** Use independent sequences in external programs
 #+begin_src shell
 blastn mydb.db -query fusta/fasta/seq25.fa
 asgart fusta/fasta/chrX.fa fusta/asgart/chrY.fa --out result.json
 #+end_src
** Runtime options
#+begin_src
USAGE:
    fusta [OPTIONS] <FASTA> --mountpoint <mountpoint>

OPTIONS:
    -D, --daemon                     Launch in the background; will automatically quit when unmounted
    -h, --help                       Prints help information
    -M, --mmap                       Use mmap instead of seek to extract sequences. Faster, but memory hungrier.
    -o, --mountpoint <mountpoint>    Specifies the directory to use as mountpoint [default: fusta]
    -E, --non-empty                  Perform the mount even if the destination folder is not empty
    -v, -vv, -vvv                    Sets the level of verbosity
    -V, --version                    Prints version information

ARGS:
    <FASTA>    A (multi)FASTA file containing the sequences to mount
#+end_src
* Contact
If you have any question or if you encounter a problem, do not hesitate to [[https://github.com/delehef/fusta/issues][open an issue]].
* Acknowledgments
FUSTA is standing on the shoulders of, among others, [[https://github.com/zargony/fuse-rs/][fuse-rs]], [[https://github.com/clap-rs/clap][clap]], [[https://github.com/danburkert/memmap-rs][memmap]] and [[https://github.com/knsd/daemonize][daemonize]].
* Changelog
** v1.1
- FUSTA can now directly extract ranges from a sequence
** v1.0
- Initial release
